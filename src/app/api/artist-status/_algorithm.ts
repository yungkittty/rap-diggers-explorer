let actions = ["üëç", "üëé", "‚õèÔ∏è", "‚ùå"];
let results = [];
for (let i = 0; i < 25; i++) {
  let result = [];
  for (let ii = 0; ii < Math.random() * 5 + 1; ii++) {
    result.push(actions[Math.floor(Math.random() * 4)]);
  }
  results.push(result);
}
// console.log(JSON.stringify(results,null,2));

const actions_ = [
  ["üëç", "üëç", "üëç"],
  ["üëç", "‚õèÔ∏è", "üëé", "üëé", "üëç"],
  ["üëé", "üëç", "üëé"],
  ["‚ùå", "üëç", "‚ùå", "‚ùå", "üëç"],
  ["üëç", "üëé", "‚õèÔ∏è", "‚õèÔ∏è", "‚õèÔ∏è"],
  ["üëé", "‚õèÔ∏è"],
  ["üëé", "‚ùå"],
  ["‚õèÔ∏è", "‚ùå"],
  ["‚ùå", "‚ùå"],
  ["üëç", "‚õèÔ∏è", "‚ùå", "‚õèÔ∏è", "üëç"],
  ["üëé", "‚ùå", "‚õèÔ∏è"],
  ["üëç", "üëé", "‚ùå", "‚ùå"],
  ["‚ùå", "‚ùå", "‚õèÔ∏è", "üëé"],
  ["‚õèÔ∏è", "üëé", "üëç", "‚ùå"],
  ["üëé", "‚ùå"],
  ["üëé", "üëç", "‚õèÔ∏è", "‚õèÔ∏è", "‚ùå", "‚õèÔ∏è"],
  ["üëç", "‚õèÔ∏è", "‚ùå"],
  ["üëç", "‚ùå", "‚ùå", "‚ùå", "üëç"],
  ["‚õèÔ∏è", "üëé", "‚õèÔ∏è", "üëé"],
  ["‚õèÔ∏è", "üëé"],
  ["‚ùå", "‚ùå"],
  ["üëç", "üëç", "‚õèÔ∏è"],
  ["üëé", "üëé", "‚ùå", "‚ùå"],
  ["üëé", "‚õèÔ∏è", "‚ùå"],
];

actions_.sort((leftActions, rightActions) => {
  const leftActionsLikeRatio =
    leftActions.filter((a) => a === "üëç").length / leftActions.length;
  const leftActionsDislikeRatio =
    leftActions.filter((a) => a === "üëé").length / leftActions.length;
  const leftActionsDigInRatio =
    leftActions.filter((a) => a === "‚õèÔ∏è").length / leftActions.length;
  const leftActionsDigOutRatio =
    leftActions.filter((a) => a === "‚ùå").length / leftActions.length;

  const rightActionsLikeRatio =
    rightActions.filter((a) => a === "üëç").length / rightActions.length;
  const rightActionsDislikeRatio =
    rightActions.filter((a) => a === "üëé").length / rightActions.length;
  const rightActionsDigInRatio =
    rightActions.filter((a) => a === "‚õèÔ∏è").length / rightActions.length;
  const rightActionsDigOutRatio =
    rightActions.filter((a) => a === "‚ùå").length / rightActions.length;

  const computeScore = (
    likeRatio: number,
    dislikeRatio: number,
    digInRation: number,
    digOutRatio: number,
  ): number =>
    (digInRation * +1.5 +
      likeRatio * +5 +
      // snooze
      dislikeRatio * -1.5 +
      digOutRatio * -8) /
    4;

  const leftScore = computeScore(
    leftActionsLikeRatio,
    leftActionsDislikeRatio,
    leftActionsDigInRatio,
    leftActionsDigOutRatio,
  );
  const rightScore = computeScore(
    rightActionsLikeRatio,
    rightActionsDislikeRatio,
    rightActionsDigInRatio,
    rightActionsDigOutRatio,
  );

  return leftScore - rightScore;
});
// console.log(JSON.stringify(actions_.reverse(), null, 2));
